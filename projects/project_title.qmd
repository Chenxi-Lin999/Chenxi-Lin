---
title: "Parkinson’s Telemonitoring"
author: Chenxi Lin
date: 2025-07-28
---

About this site

# Introduction
This dataset is composed of a range of biomedical voice measurements from 42 people with early-stage Parkinson's disease recruited to a six-month trial of a telemonitoring device for remote symptom progression monitoring. The dataset includes various acoustic features such as average vocal fundamental frequency, jitter, shimmer, and harmonic-to-noise ratio, as well as two clinical outcome scores: motor UPDRS (Unified Parkinson's Disease Rating Scale) and total UPDRS, which are standardized measures used to assess the severity and progression of Parkinson’s symptoms. The primary goal of this analysis is to investigate how voice features relate to disease severity and to develop predictive models that estimate UPDRS scores based on these vocal biomarkers.

## Data source
The dataset was created by Athanasios Tsanas (tsanasthanasis@gmail.com) and Max Little (littlem@physics.ox.ac.uk) of the University of Oxford, in collaboration with 10 medical centers in the US and Intel Corporation who developed the telemonitoring device to record the speech signals. The original study used a range of linear and nonlinear regression methods to predict the clinician's Parkinson's disease symptom score on the UPDRS scale.

http://archive.ics.uci.edu/ml/datasets/Parkinsons+Telemonitoring

## Reference
A Tsanas, MA Little, PE McSharry, LO Ramig (2009)'Accurate telemonitoring of Parkinson's disease progression by non-invasive speech tests', IEEE Transactions on Biomedical 

# Load the packages
```{r, message=FALSE}
library(tidyverse)
library(tidymodels)
library(knitr)
library(GGally)

```


# Load dataset
```{r}
data <- read.csv("Parkinsons-Telemonitoring-ucirvine.csv")

# turn the character "false"/"true" into a factor with labels
data <- data %>%
  mutate(gender = factor(sex, levels = c("false", "true"), labels = c("Female", "Male") ))


```

# 1. Exploratory Data Analysis (EDA)

## 1.1 Summary statistics
```{r}
summary(data)
```

### 1.1.1 Summarize by group
```{r}
# compute count, mean & SD of key variables by gender
summary_by_gender <- data %>%
  group_by(gender) %>%
  summarise(
    n                  = n(),                                # sample size
    age_mean           = mean(age,           na.rm = TRUE),  # average age
    age_sd             = sd(age,             na.rm = TRUE),  # age SD
    total_updrs_mean   = mean(total_updrs,   na.rm = TRUE),  # avg total UPDRS
    total_updrs_sd     = sd(total_updrs,     na.rm = TRUE),  # SD total UPDRS
    motor_updrs_mean   = mean(motor_updrs,   na.rm = TRUE),  # avg motor UPDRS
    motor_updrs_sd     = sd(motor_updrs,     na.rm = TRUE)   # SD motor UPDRS
  )

# Render the summary_by_gender as a markdown table
summary_by_gender %>%
  kable(caption = "Table 1. Summary Statistics of Age and UPDRS by Gender")

```


## 1.2 Visualize distributions & outliers of total UPDRS
```{r}
#  Histogram of total UPDRS
ggplot(data, aes(x = total_updrs)) +
  geom_histogram(binwidth = 1, fill = "darkslategray3", color = "black") +
  labs(title = "Distribution of Total UPDRS", x = "Total UPDRS", y = "Count") +
  theme(axis.title.x = element_text(size = 16), 
        axis.title.y = element_text(size = 16),  
        axis.text.x  = element_text(size = 12),  
        axis.text.y  = element_text(size = 12),  
        legend.position = "none")

# Density plot of total UPDRS by gender
ggplot(data, aes(x = total_updrs, fill = gender)) +
  geom_density(alpha = 0.4) +
  labs(
    title = "Density of Total UPDRS by Gender",
    x     = "Total UPDRS",
    y     = "Density")

# Violin + boxplot of motor UPDRS by gender
ggplot(data, aes(x = gender, y = motor_updrs, fill = gender)) +
  geom_violin(trim = FALSE, color = "black") +
  geom_boxplot(width = 0.1, outlier.shape = NA,
               color = "black", size = 1.2) +
  scale_fill_manual(values = c("Female" = "rosybrown2", "Male" = "darkslategray3")) +
  labs( title = "Motor UPDRS Distribution by Gender",
    x = "Gender",
    y = "Motor UPDRS") +
  theme(axis.title.x = element_text(size = 16),  
        axis.title.y = element_text(size = 16),   
        axis.text.x  = element_text(size = 12),     
        axis.text.y  = element_text(size = 12),  
        legend.position = "none")

```


## 1.3 Boxplot for age vs. total UPDRS
```{r}
ggplot(data, aes(x=factor(age), y=total_updrs)) +
  geom_boxplot(fill='lightgreen') +
  labs(title='Age vs. Total UPDRS', x='Age', y='Total UPDRS') +
  theme(axis.text.x = element_text(angle=0), )

```

## 1.4 Scatterplot matrix of key measures
```{r}
data %>%
  select(motor_updrs, total_updrs, jitter, shimmer, nhr, hnr) %>%
  ggpairs(title = "Pairwise Scatterplots of Vocal Measures")


```



# 2. Correlation and Regression Analysis
```{r}

# 3.1 Correlation matrix
num_vars <- data %>%
  select(age, motor_updrs, total_updrs, jitter, shimmer, nhr, hnr)
corr_mat <- cor(num_vars, use = "pairwise.complete.obs")
corrplot(corr_mat, method = "color", type = "upper", order = "hclust",
         tl.cex = 0.8, addCoef.col = "black", number.cex = 0.7)

# 3.2 Simple linear regression
lm1 <- lm(total_updrs ~ jitter + shimmer, data = data)
summary(lm1)

# 3.3 Multiple regression including age & gender
lm2 <- lm(total_updrs ~ jitter + shimmer + age + gender, data = data)
summary(lm2)

```


# 3. Logistic Regression (Categorize UPDRS severity first)
```{r}
# Categorize UPDRS severity (example: mild < 20, moderate = 20-30, severe > 30)
data$severity <- cut(data$total_updrs, breaks=c(-Inf, 20, 30, Inf), labels=c("Mild", "Moderate", "Severe"))

# Logistic regression predicting severe vs non-severe
data$severe_binary <- ifelse(data$severity=="Severe", 1, 0)

# Fit logistic regression
logit_model <- glm(severe_binary ~ jitter + shimmer + age + sex, data=data, family=binomial())
summary(logit_model)

# ROC Curve analysis
library(pROC)
roc_obj <- roc(data$severe_binary, fitted(logit_model))
plot(roc_obj, col="blue", main="ROC Curve for Severe UPDRS Classification")
auc(roc_obj) # Area Under the Curve


```


# 4.Time-Series Analysis / Linear Mixed Models (LMM)
```{r}
# Load necessary library
library(lme4)

# Fit Linear Mixed Model (LMM) accounting for repeated measures per subject
lmm <- lmer(total_updrs ~ test_time + age + gender + (1 | subject), data=data)
summary(lmm)

# Check assumptions
plot(resid(lmm) ~ fitted(lmm))
hist(resid(lmm), breaks=30, main="Residual Histogram", xlab="Residuals")

```

# 5. Cluster Analysis (Unsupervised Learning)
```{r}
# Normalize features
library(scales)
data_scaled <- data %>%
  select(jitter, shimmer, nhr, hnr) %>%
  mutate_all(rescale)

# k-means clustering (k=3 example)
set.seed(123)
kmeans_model <- kmeans(data_scaled, centers=3, nstart=25)

# Append clusters to original data
data$cluster <- factor(kmeans_model$cluster)

# Visualize clusters (using PCA for plotting)
pca_res <- prcomp(data_scaled, scale=TRUE)
pca_data <- data.frame(pca_res$x, cluster=data$cluster)

ggplot(pca_data, aes(PC1, PC2, color=cluster)) +
  geom_point(alpha=0.6) +
  labs(title="K-means Clustering (k=3)", x="PC1", y="PC2") +
  theme_minimal()



```

# Principal Component Analysis (PCA)
```{r}
# PCA on selected numeric variables
pca <- prcomp(data[, c("jitter", "shimmer", "nhr", "hnr", "rpde", "dfa", "ppe")], scale=TRUE)

# Summary of PCA
summary(pca)

# Scree plot to visualize variance explained
screeplot(pca, type="lines", main="Scree Plot")

# PCA biplot
biplot(pca, scale=0, cex=0.5)


```


# 7. Survival Analysis (Optional - adapted example)
```{r}

# Load necessary library
library(survival)

# Example binary event: UPDRS exceeding threshold (e.g., > 30)
data$event <- ifelse(data$total_updrs > 30, 1, 0)

# Survival object (assuming test_time as follow-up duration)
surv_obj <- Surv(data$test_time, data$event)

# Kaplan-Meier curve
km_fit <- survfit(surv_obj ~ 1)
plot(km_fit, main="Kaplan-Meier Curve", xlab="Time", ylab="Survival Probability")

# Cox Proportional Hazards Model (example with age, sex)
cox_model <- coxph(surv_obj ~ age + sex, data=data)
summary(cox_model)


```
















